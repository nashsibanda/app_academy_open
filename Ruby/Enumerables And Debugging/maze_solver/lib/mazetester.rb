require "byebug"

maze = [
["*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*"],
["*", " ", " ", " ", " ", " ", " ", " ", " ", " ", "*", " ", " ", " ", "E", "*"],
["*", " ", " ", " ", " ", "*", " ", " ", " ", " ", "*", " ", " ", "*", "*", "*"], 
["*", " ", " ", " ", " ", "*", " ", " ", " ", " ", "*", " ", " ", " ", " ", "*"],
["*", " ", " ", " ", " ", "*", " ", " ", " ", " ", "*", " ", " ", " ", " ", "*"],
["*", " ", " ", " ", " ", "*", " ", " ", " ", " ", "*", " ", " ", " ", " ", "*"],
["*", "S", " ", " ", " ", "*", " ", " ", " ", " ", " ", " ", " ", " ", " ", "*"],
["*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*"]
]

start = [1, 14]
new_arr = Array.new(maze.length) {Array.new}

p ((0 - start[0]) + (0 - start[1])).abs
# p new_arr

maze.each_with_index do |row, row_idx|
  # debugger
  row.each_with_index do |spot, spot_idx|
    new_arr[row_idx] << ((row_idx-start[0]).abs + (spot_idx-start[1]).abs)
  end
end



# puts new_arr.map(&:join)

p maze[1][14]
p new_arr[1][14]